# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: build-branch
on:
  pull_request:
  push:
  schedule:
    - cron: 30 0,12 * * *
jobs:
  acceptance:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        suite:
          - secure
          - unsecure
          - misc
      fail-fast: false
    steps:
      - name: Cache for maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-repo-${{ hashFiles('**/pom.xml') }}
      - name: Cache for npm dependencies
        uses: actions/cache@v2
        with:
            path: |
              ~/.pnpm-store
              **/node_modules
            key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
            restore-keys: |
              ${{ runner.os }}-pnpm-
      - name: Checkout to /mnt/ozone
        run: |
          sudo chmod 777 /mnt
          git clone 'https://github.com/${{ github.repository }}.git' /mnt/ozone
          cd /mnt/ozone
          if [[ '${{ github.event_name }}' == 'pull_request' ]]; then
            git fetch --verbose origin '${{ github.ref }}'
          else
            git fetch --verbose origin '${{ github.sha }}'
          fi
          git checkout FETCH_HEAD
          git reset --hard
      - name: Run a full build
        run: |
          cd /mnt/ozone
          hadoop-ozone/dev-support/checks/build.sh -Pcoverage
      - name: Install robotframework
        run: sudo pip install robotframework
      - name: Execute tests
        run: |
          cd /mnt/ozone/hadoop-ozone/dist/target/ozone-* && sudo mkdir .aws && sudo chmod 777 .aws && sudo chown 1000 .aws
          cd /mnt/ozone && hadoop-ozone/dev-support/checks/acceptance.sh
        env:
          KEEP_IMAGE: false
          OZONE_ACCEPTANCE_SUITE: ${{ matrix.suite }}
          OZONE_WITH_COVERAGE: true
          OZONE_VOLUME_OWNER: 1000
      - name: Archive build results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: acceptance-${{ matrix.suite }}
          path: /mnt/ozone/target/acceptance
        continue-on-error: true
      - name: Delete temporary build artifacts before caching
        run: |
          #Never cache local artifacts
          rm -rf ~/.m2/repository/org/apache/hadoop/hdds
          rm -rf ~/.m2/repository/org/apache/hadoop/ozone
        if: always()
